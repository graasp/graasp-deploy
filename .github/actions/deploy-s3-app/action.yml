name: Deploy frontend to S3
description: Deploys static files to AWS S3

inputs:
  aws-access-key-id:
    required: true
    description: AWS access key ID
  aws-secret-access-key:
    required: true
    description: AWS secret access key
  aws-region:
    required: true
    description: AWS region

  aws-s3-bucket-name:
    required: true
    description: AWS S3 bucket name
  app-id:
    required: true
    description: Your app ID
  version:
    required: false
    default: 'latest'
    description: The version of the app that will be deployed
  build-folder:
    required: false
    default: 'build'
    description: The folder to push to aws (build by default)

  cloudfront-distribution-id:
    required: true
    description: Cloudfront distribution ID


runs:
  using: "composite"
  steps:
    # Configure AWS credential and region
    - name: Configure AWS Credentials
      id: configure-aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    # Recursively copy new and updated files from the source directory to the destination
    - name: Sync files with AWS S3 Bucket
      id: sync-s3
      # Set environment variable with the name of the destination bucket to perform sync. It is only available to this step
      env:
        APP_DIR: '${{ inputs.aws-s3-bucket-name }}/${{ inputs.app-id }}/${{ inputs.version }}/'
      run: aws s3 sync ${{ inputs.build-folder }} s3://${APP_DIR} --acl public-read --follow-symlinks --delete
      # --acl public-read makes files publicly readable
      # --follow-symlinks fixes some weird symbolic link problems that may come up
      # --delete permanently deletes files in the S3 bucket that are not present in the latest version of the repository/build.
      shell: bash

    # Create a new invalidation
    - name: Invalidate cloudfront distribution
      id: invalidate-cloudfront
      run: aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront-distribution-id }} --paths /${{ inputs.app-id }}/${{ inputs.version }}/*
      shell: bash

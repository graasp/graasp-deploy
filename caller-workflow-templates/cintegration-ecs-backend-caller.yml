name: Deploy to development environment

# Controls when the action will run
on:
  # Triggers the workflow on push events only for the main branch
  push

  # Allows to run the workflow manually from the Actions tab
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      test-execution:
        type: boolean
        default: true
        description: 'Execute test job (Default: yes)'

# This workflow is made up of one job that calls the reusable workflow in graasp-deploy
jobs:
  graasp-deploy-ecs-backend-workflow:
    # Replace with repository name
    name: CI caller template
    # Replace 'main' with the hash of a commit, so it points to an specific version of the reusable workflow that is used
    uses: graasp/graasp-deploy/.github/workflows/cintegration-ecs-backend.yml@main
    # Replace input ecs-task-definition with template file. Format: '.aws/<name>-dev.json'
    with:
      ecs-task-definition:
      apps-plugin: true
      chatbox-plugin: true
      database-logs: false
      embedded-link-item-plugin: true
      node-env: production
      node-env-iframely: production
      public-plugin: true
      roarr-log: false
      s3-file-item-plugin: true
      save-actions: true
      subscriptions-plugin: true
      token-based-auth: true
      websockets-plugin: true
      test-execution: ${{ inputs.test-execution }}
    # Insert required secrets based on repository with the following format: ${{ secrets.SECRET_NAME }}
    secrets:
      aws-access-key-id:
      aws-secret-access-key:
      aws-region:
      ecs-cluster:
      ecs-service:
      ecr-repository:
      container-name-graasp:
      container-name-iframely:
      container-name-classifier:
      container-image-iframely:
      container-image-classifier:
      analyzer-client-host:
      apps-jwt-secret:
      apps-publisher-id:
      auth-client-host:
      auth-token-expiration-in-minutes:
      auth-token-jwt-secret:
      avatars-path-prefix:
      builder-client-host:
      client-host:
      cookie-domain:
      cors-origin-regex:
      email-links-host:
      embedded-link-item-iframely-href-origin:
      explorer-client-host:
      file-storage-root-path:
      files-path-prefix:
      h5p-content-access-key-id:
      h5p-content-bucket-name:
      h5p-content-region:
      h5p-content-secret-access-key:
      h5p-path-prefix:
      hidden-tag-id:
      hostname:
      image-classifier-api:
      jwt-secret:
      login-item-tag-id:
      mailer-config-from-email:
      mailer-config-password:
      mailer-config-smtp-host:
      mailer-config-username:
      pg-connection-uri:
      player-client-host:
      port:
      public-tag-id:
      published-tag-id:
      redis-host:
      redis-port:
      redis-username:
      refresh-token-expiration-in-minutes:
      refresh-token-jwt-secret:
      s3-file-item-access-key-id:
      s3-file-item-bucket:
      s3-file-item-region:
      s3-file-item-secret-access-key:
      secure-session-secret-key:
      stripe-secret-key:
      stripe-default-plan-price-id:
      thumbnails-path-prefix:
      mock-secure-session-secret-key:
      mock-jwt-secret:
      mock-refresh-token-jwt-secret:
      mock-auth-token-jwt-secret:
